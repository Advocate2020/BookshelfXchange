@page "/book/edit/{BookId}"
@rendermode InteractiveServer
@using BookshelfXchange.ViewModels.GET
@inject NavigationManager navigation
@inject IToastService toastService


<PageTitle>Edit Book</PageTitle>
<head>
    <link href="styles/tableButtons.css" rel="stylesheet" />
    <link href="styles/formStyle.css" rel="stylesheet" />

</head>

<div class="row">
    <div class="col-12">
        <h1>Book Details</h1>
    </div>
</div>
<hr>
<BlazoredToasts Position="ToastPosition.TopRight" Timeout="5" ShowProgressBar="true" IconType="IconType.FontAwesome" SuccessClass="success-toast-override" SuccessIcon="fa fa-thumbs-up" ErrorIcon="fa fa-bug" />

<AuthorizeView Roles="Admin" Context="authContext">
    <Authorized>    



        <EditForm method="put" Model="_viewModel" FormName="updateBook" OnValidSubmit="Update" class="col-md-6" style="margin-left: auto; margin-right: auto;">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group mb-3">
                <label for="title" class="form-label">Book title</label>
                <InputText @bind-Value="_viewModel.Title" id="title" class="form-control" />
                <ValidationMessage For="() => _viewModel.Title" class="text-danger" />
            </div>
            <div class="form-group mb-3">
                <label for="author" class="form-label">Book author</label>
                <InputText @bind-Value="_viewModel.Author" id="author" class="form-control" />
                <ValidationMessage For="() => _viewModel.Author" class="text-danger"/>
            </div>
            <div class="form-group mb-3">
                <label for="category" class="form-label">Book category</label>
                <InputSelect id="category" @bind-Value="_viewModel.CategoryId" class="form-control form-select">
                    @if (BookCategories is null)
                    {
                        <option selected value=""></option>
                    }
                    else
                    {
                        <option selected value="@_viewModel.CategoryId">@GetCatoryName(_viewModel.CategoryId)</option>
                        @foreach (var category in BookCategories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="() => _viewModel.CategoryId" class="text-danger" />
            </div>
            <div class="form-group text-right">
                <button type="submit" class="btn btn-update">
                    Update
                </button>
            </div>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        @{
            var returnUrl =
            NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

            <LoginRedirect ReturnUrl="@returnUrl" />
        }

    </NotAuthorized>
</AuthorizeView>




